// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model User {
  user_id          String           @id
  display_name     String
  full_name        String?
  line_profile_pic String
  phone            String?
  gender           Gender?
  photo            String?
  occupation       String?
  channel          Channel?
  photoid_name     String?
  dob              DateTime?
  spirit_animal    SpiritAnimal?
  signature        String?
  hobby            Hobby?
  registeredInfos  RegisteredInfo[]
  updated_at       DateTime         @updatedAt
  created_at       DateTime         @default(now())
}

model RegisteredInfo {
  id              String          @id @default(uuid())
  user            User?           @relation(fields: [user_id], references: [user_id])
  user_id         String?
  name            String
  age_range       String
  occupation      Occupation
  whatBringsUHere WhatBringsUHere
  channel         Channel
  updated_at      DateTime        @updatedAt
  created_at      DateTime        @default(now())
}

enum Gender {
  MALE
  FEMALE
  NONBINARY
  OTHERS
  PREFERNOTTOSAY
}

enum Occupation {
  STUDENT
  UNI_STUDENT
  EMPLOYEE
  BUSINESS_OWNER
  FREELANCER
  OTHERS
}

enum WhatBringsUHere {
  EXPLORING
  WORKSHOP
  MUSIC
  FRIENDS
  OTHERS
}

enum Channel {
  SOCIAL_MEDIA
  WEBSITE
  FRIENDS
  INFLUENCER
  OTHERS
}

enum Hobby {
  READING
  PAINTING
  GAMING
  COOKING
  PHOTOGRAPHY
  TRAVELING
  GARDENING
  FISHING
  WRITING
}

enum SpiritAnimal {
  CAT
  BUTTERFLY
  FISH
  DUCK
  SQUIRREL
  WATER_MONITOR
  SWAN
  DOG
  OTTER
}
